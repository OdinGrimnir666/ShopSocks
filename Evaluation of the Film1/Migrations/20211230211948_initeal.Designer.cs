// <auto-generated />
using Evaluation_of_the_Film1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Evaluation_of_the_Film1.Migrations
{
    [DbContext(typeof(AppDbContent))]
    [Migration("20211230211948_initeal")]
    partial class initeal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Evaluation_of_the_Film1.Models.Floor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Floor");
                });

            modelBuilder.Entity("Evaluation_of_the_Film1.Models.Socks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("floorid")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("longDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("shortDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sockscategoryid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("floorid");

                    b.HasIndex("sockscategoryid");

                    b.ToTable("Socks");
                });

            modelBuilder.Entity("Evaluation_of_the_Film1.Models.SocksCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("desk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("namecategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocksCategories");
                });

            modelBuilder.Entity("Evaluation_of_the_Film1.Models.Socks", b =>
                {
                    b.HasOne("Evaluation_of_the_Film1.Models.Floor", "floor")
                        .WithMany("socks")
                        .HasForeignKey("floorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evaluation_of_the_Film1.Models.SocksCategory", "SocksCategory")
                        .WithMany("socks")
                        .HasForeignKey("sockscategoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SocksCategory");

                    b.Navigation("floor");
                });

            modelBuilder.Entity("Evaluation_of_the_Film1.Models.Floor", b =>
                {
                    b.Navigation("socks");
                });

            modelBuilder.Entity("Evaluation_of_the_Film1.Models.SocksCategory", b =>
                {
                    b.Navigation("socks");
                });
#pragma warning restore 612, 618
        }
    }
}
